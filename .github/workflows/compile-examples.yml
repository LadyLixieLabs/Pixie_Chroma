name: Compile Examples

on:
  push:
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.h'
    - '**compile-examples.yml'
    - '**Doxyfile'
  pull_request:
    paths:
    - '**.ino'
    - '**.cpp'
    - '**.h'
    - '**compile-examples.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # libraries to install for all boards
      UNIVERSAL_LIBRARIES: |
        - name: FastLED
        - name: PixieChroma
        - source-path: ./
      # sketch paths to compile (recursive) for all boards
      UNIVERSAL_SKETCH_PATHS: |
        - examples
      SKETCHES_REPORTS_PATH: docs/sketches-reports

    strategy:
      fail-fast: false

      matrix:
        board:
          - fqbn: esp8266:esp8266:huzzah
            type: esp8266
          - fqbn: esp32:esp32:esp32
            type: esp32

        # make board type-specific customizations to the matrix jobs
        include:
          # ESP8266 boards
          - board:
              type: esp8266
            platforms: |
              # Install ESP8266 platform via Boards Manager
              - name: esp8266:esp8266
                source-url: https://arduino.esp8266.com/stable/package_esp8266com_index.json
                #version: 2.5.0
          # ESP32 boards
          - board:
            type: esp32
            platforms: |
              - name: esp32:esp32
                source-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
                
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # it's necessary to checkout the platform before installing it so that the ArduinoCore-API dependency can be added
      - name: Install ESP32 platform dependencies
        if: matrix.board.type == 'esp32'
        run: pip3 install pyserial

      - name: Compile examples
        uses: arduino/compile-sketches@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: ${{ matrix.platforms }}
          fqbn: ${{ matrix.board.fqbn }}
          libraries: |
            ${{ env.UNIVERSAL_LIBRARIES }}
            ${{ matrix.libraries }}
          sketch-paths: |
            ${{ env.UNIVERSAL_SKETCH_PATHS }}
            ${{ matrix.sketch-paths }}
          enable-deltas-report: "true"
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}

#      - name: Write data to size trends report spreadsheet
#        # Update report on every push to the master branch
#        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#        uses: arduino/report-size-trends@main
#        with:
#          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
#          google-key-file: ${{ secrets.GOOGLE_KEY_FILE }}
#          spreadsheet-id: 1I6NZkpZpf8KugBkE92adB1Z3_b7ZepOpCdYTOigJpN4
#
#      - name: Save memory usage change report as artifact
#        if: github.event_name == 'pull_request'
#        uses: actions/upload-artifact@v2
#        with:
#          name: ${{ env.SKETCHES_REPORTS_PATH }}
#          path: ${{ env.SKETCHES_REPORTS_PATH }}

      - name: Doxygen Build
        uses: langroodi/doxygenize@v1.3
        with:
          doxygenconf: './docs/Doxyfile'
          htmloutput: './docs/'
          ghpagesbranch: 'main'
          ghpagesdir: './docs/'
